# shellcheck shell=bash

# Trims leading and trailing whitespace from $2 and writes it to the variable name passed as $1
trim() {
    local var=${1:?} text=${2:-}
    text="${text#"${text%%[![:space:]]*}"}"
    text="${text%"${text##*[![:space:]]}"}"
    printf -v "$var" '%s' "$text"
}

# reversed systemctl
resystemctl() {
    systemctl "$2" "$1"; 
}

# record command
recc() {
    local log_file
    log_file="$(xdg-user-dir DOCUMENTS)"/recc/$(date +%Y-%m-%d_%H-%M-%S).log
    echo "Log file: $log_file"
    script -fc "$1" "$log_file";
}

## ssh
sshp() {
    ssh -CqTNn -D 0.0.0.0:1080 "$@"
}
if (command -v fzf &>/dev/null); then
    sshh() {
        setopt localoptions nonomatch
        command cat <(command tail -n +1 ~/.ssh/config ~/.ssh/config.d/* /etc/ssh/ssh_config 2>/dev/null | command grep -i '^\s*host\(name\)\? ' | command awk '{for (i = 2; i <= NF; i++) print $1 " " $i}' | command grep -v '[*?%]') \
            <(command grep -oE '^[[a-z0-9.,:-]+' ~/.ssh/known_hosts 2>/dev/null | command tr ',' '\n' | command tr -d '[' | command awk '{ print $1 " " $1 }') \
            <(command grep -v '^\s*\(#\|$\)' /etc/hosts 2>/dev/null | command grep -Fv '0.0.0.0' | command sed 's/#.*//') |
            command awk '{for (i = 2; i <= NF; i++) print $i}' | command sort -u | command fzf
    }
    sshi() {
        ssh "$(sshh)"
    }
    sshpi() {
        ssh -CqTNn -D 0.0.0.0:1080 "$(sshh)"
    }
fi